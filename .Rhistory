getwd()
getwd()
getwd()
setwd("Kaggle Datasets/world-happiness-report")
getwd()
report_15 <- read.csv("2015.csv")
head(report_15, 5)
report_16 <- read.csv("2016.csv")
head(report_16, 5)
report_17 <- read.csv("2017.csv")
head(report_17, 5)
column(report_15)
colnames(report_15)
tail(report_15)
str(report_15)
summary(report_15)
2500*160
is.na(report_15)
getwd()
setwd("penguin/Desktop/projects/")
getwd()
report_15 <- read.csv("2015.csv")
head(report_15, 5)
report_16 <- read.csv("2016.csv")
head(report_16, 5)
report_17 <- read.csv("2017.csv")
head(report_17, 5)
colnames(report_15)
tail(report_15)
str(report_15)
summary(report_15)
report_15 <- read.csv("2015.csv", na.strings = c(""))
head(report_15, 5)
report_16 <- read.csv("2016.csv", na.strings = c(""))
head(report_16, 5)
report_17 <- read.csv("2017.csv", na.strings = c(""))
head(report_17, 5)
colnames(report_15)
tail(report_15)
str(report_15)
summary(report_15)
#Checking for NA in all the 3 data sets
report_15(!complete.cases(report_15), )
#Checking for NA in all the 3 data sets
report_15[!complete.cases(report_15), ]
#Checking for NA in all the 3 data sets
report_15[!complete.cases(report_15), ]
report_16[!complete.cases(report_16),]
report_17[!complete.cases(report_17),]
# Visualisation
# Happiness Score relation to Economy GDP Per capita
library(ggplot2)
# Checking the columns in all the three data sets are the same
colnames(report_15)
colnames(report_16)
colnames(report_17)
r_15 <- p <- ggplot(data = report_15, aes(x=Happiness.Rank,
y=Economy..GDP.per.Capita.,
colour=Country, size=Region))
r_15 + geom_histogram()
r_15 + geom_histogram()
r_15 + geom_histogram(binwidth = 10)
r_15 + geom_point()
colnames(report_15) <- c("Country", "Region", "HappinessRank", "HappinessScore",
"StsError", "EconomyGDP", "Family", "LifeExpectancy", "Freedom",
"GovtCorruption", "Generosity", "DystopiaResidual")
colnames(report_15)
?order
sort_GDP_15 <- report_15[order("EconomyGDP"),]
head(sort_GDP_15, 5)
sort_GDP_15
# Subset the dataset with countries for highest and lowest GDP.
attach(report_15)
#Sort by EconomyGDP
sort_GDP_15 <- report_15[order("EconomyGDP"),]
detach(report_15)
sort_GDP_15
# Subset the dataset with countries for highest and lowest GDP.
sort_GDP_15 <- arrange(report_15, EconomyGDP)
# Subset the dataset with countries for highest and lowest GDP.
?arrange()
# Subset the dataset with countries for highest and lowest GDP.
library(plyr)
?arrange
sort_GDP_15 <- arrange(report_15, EconomyGDP)
sort_GDP_15
head(sort_GDP_15, 10)
sort_GDP_15 <- arrange(report_15, desc(EconomyGDP))
head(sort_GDP_15, 10)
sort_GDP15 <- head(sort_GDP_15, 10)
sort_GDP15
econmy_happ_plot_15  <- ggplot(data = , aes(x=HappinessRank,
y=EconomyGDPper,
colour=Country, size=Region))
econmy_happ_plot_15  <- ggplot(data = sort_GDP15, aes(x=HappinessRank,
y=EconomyGDPper,
colour=Country, size=Region))
econmy_happ_plot_15 + geom_point()
econmy_happ_plot_15  <- ggplot(data = sort_GDP15, aes(x=HappinessRank,
y=EconomyGDP,
colour=Country, size=Region))
econmy_happ_plot_15 + geom_point()
econmy_happ_plot_15 + geom_boxplot()
econmy_happ_plot_15  <- ggplot(data = sort_GDP15, aes(x=HappinessRank,
y=EconomyGDP,
colour=Country))
econmy_happ_plot_15 + geom_boxplot()
econmy_happ_plot_15  <- ggplot(data = sort_GDP15, aes(x=HappinessRank,
y=EconomyGDP,
colour=Country, size=Region))
econmy_happ_plot_15 + geom_point()
econmy_happ_plot_15 + geom_boxplot()
econmy_happ_plot_15 + geom_bar()
econmy_happ_plot_15  <- ggplot(data = sort_GDP15, aes(x=HappinessRank,
y=EconomyGDP,
colour=Country))
econmy_happ_plot_15 + geom_bar()
econmy_happ_plot_15  <- ggplot(data = sort_GDP15, aes(x=HappinessRank,
y=EconomyGDP,
colour=Country, size=Region))
econmy_happ_plot_15 + geom_histogram()
econmy_happ_plot_15 + geom_histogram(bins = 10)
econmy_happ_plot_15 + geom_boxplot(size=1.2)
econmy_happ_plot_15 + geom_boxplot(size=5)
econmy_happ_plot_15 + geom_boxplot(size=3)
econmy_happ_plot_15 + geom_boxplot(size=3) +geom_point()
econmy_happ_plot_15 + geom_boxplot(size=3) + geom_point()
econmy_happ_plot_15 + geom_boxplot(size=3) + geom_point()
econmy_happ_plot_15 + geom_boxplot(size=3) + geom_jitter()
econmy_happ_plot_15 + geom_boxplot(size=3)
plot_15  <- ggplot(data = sort_GDP15, aes(x=HappinessRank,
y=EconomyGDP,
colour=Country))
plot_15 + geom_point()
plot_15 + geom_boxplot(size=3)
plot_15 + geom_bar(stat = "identity") + stat_bin()
plot_15  <- ggplot(data = sort_GDP15, aes(HappinessRank,
EconomyGDP))
plot_15 + geom_bar(stat = "identity") + stat_bin()
plot_15 + geom_bar(stat = "identity")
plot_15  <- ggplot(data = sort_GDP15, aes(HappinessRank,
EconomyGDP, fill=col))
plot_15 + geom_bar(stat = "identity")
plot_15 + geom_bar(fill=col, stat = "identity")
plot_15 + geom_bar(fill=color, stat = "identity")
plot_15  <- ggplot(data = sort_GDP15, aes(HappinessRank,
EconomyGDP, color=Country))
plot_15 + geom_bar(stat = "identity")
plot_15  <- ggplot(data = sort_GDP15, aes(HappinessRank,
EconomyGDP, color=Country, fill=color))
plot_15 + geom_bar(stat = "identity")
plot_15  <- ggplot(data = sort_GDP15, aes(HappinessRank,
EconomyGDP, color=Country))
plot_15 + geom_bar(stat = "identity")
plot_15  <- ggplot(data = sort_GDP15, aes(HappinessRank,
EconomyGDP, colorfill=Country))
plot_15 + geom_bar(stat = "identity")
plot_15  <- ggplot(data = sort_GDP15, aes(HappinessRank,
EconomyGDP, color=Country))
plot_15 + geom_bar(stat = "identity", aes(fill=col))
plot_15 + geom_bar(stat = "identity", aes(fill=color))
?geom_bar
plot_15 + geom_bar(aes(fill = drv))
?geom_bar
plot_15 + geom_bar(aes())
getwd()
setwd("penguin/Desktop/projects/")
getwd()
setwd("Kaggle Datasets/world-happiness-report")
getwd()
# World Happiness Report for 2015, 2016 and 2017 is available.
report_15 <- read.csv("2015.csv", na.strings = c(""))
head(report_15, 5)
report_16 <- read.csv("2016.csv", na.strings = c(""))
head(report_16, 5)
report_17 <- read.csv("2017.csv", na.strings = c(""))
head(report_17, 5)
colnames(report_15)
tail(report_15)
str(report_15)
summary(report_15)
# Checking for NA in all the 3 data sets
report_15[!complete.cases(report_15),]
report_16[!complete.cases(report_16),]
report_17[!complete.cases(report_17),]
# Checking the columns in all the three data sets are the same
colnames(report_15)
colnames(report_16)
colnames(report_17)
#Changing the column names to be more easier to read and understand
colnames(report_15) <- c("Country", "Region", "HappinessRank", "HappinessScore",
"StsError", "EconomyGDP", "Family", "LifeExpectancy", "Freedom",
"GovtCorruption", "Generosity", "DystopiaResidual")
colnames(report_15)
# Subset the dataset with countries for highest and lowest GDP.
library(plyr)
?arrange
sort_GDP_15 <- arrange(report_15, desc(EconomyGDP))
sort_GDP15 <- head(sort_GDP_15, 10)
sort_GDP15
# Try to put this in a function
# Visualisation
# Happiness Score relation to Economy GDP Per capita - top 10 and bottom 10
# Create 2 New Data sets with top 10 resukts sorted on the basis of Economy
plot_15  <- ggplot(data = sort_GDP15, aes(HappinessRank,
EconomyGDP, color=Country))
plot_15 + geom_point()
plot_15 + geom_boxplot(size=3)
?geom_bar
# Using size for a discrete variable is not advised.
#
# Happiness Score relation to Health. Life Expectancy -  top 10 and bottom 10
# Happiness Score relation to Freedom - top 10 and bottom 10
# Happiness Score relation to Trust.Government Corruption - top 10 and bottom 10
# Happiness Score relation to Generocity - top 10 and bottom 10
# Countries with Max and Min corruption
# Mapping of contries with Economy
# Happiest countries Ranking through 2015, 2016 and 2017
# Region mapping with Happiness index
# Reasons why Countries some countries are happier then others.
plot_15
plot_15 + geom_bar()
plot_15 + geom_col()
plot_15 + geom_histogram(binwidth = 10)
setwd("penguin/Desktop/projects/")
getwd()
report_15 <- read.csv("2015.csv", na.strings = c(""))
head(report_15, 5)
report_16 <- read.csv("2016.csv", na.strings = c(""))
report_15 <- read.csv("2015.csv", na.strings = c(""))
head(report_15, 5)
report_16 <- read.csv("2016.csv", na.strings = c(""))
head(report_16, 5)
report_17 <- read.csv("2017.csv", na.strings = c(""))
head(report_17, 5)
colnames(report_15)
tail(report_15)
str(report_15)
summary(report_15)
# Checking for NA in all the 3 data sets
report_15[!complete.cases(report_15),]
report_16[!complete.cases(report_16),]
report_17[!complete.cases(report_17),]
# Checking the columns in all the three data sets are the same
colnames(report_15)
colnames(report_16)
colnames(report_17)
#Changing the column names to be more easier to read and understand
colnames(report_15) <- c("Country", "Region", "HappinessRank", "HappinessScore",
"StsError", "EconomyGDP", "Family", "LifeExpectancy", "Freedom",
"GovtCorruption", "Generosity", "DystopiaResidual")
colnames(report_15)
# Subset the dataset with countries for highest and lowest GDP.
library(plyr)
?arrange
sort_GDP_15 <- arrange(report_15, desc(EconomyGDP))
sort_GDP15 <- head(sort_GDP_15, 10)
sort_GDP15
colnames(c(report_15, report_16, report_17)) <- c("Country", "Region", "HappinessRank", "HappinessScore",
"StsError", "EconomyGDP", "Family", "LifeExpectancy", "Freedom",
"GovtCorruption", "Generosity", "DystopiaResidual")
reports <- c(report_15, report_16, report_17)
colnames(reports) <- c("Country", "Region", "HappinessRank", "HappinessScore",
"StsError", "EconomyGDP", "Family", "LifeExpectancy", "Freedom",
"GovtCorruption", "Generosity", "DystopiaResidual")
getwd()
report_15 <- read.csv("2015.csv", na.strings = c(""))
library(plyr)
library(dplyr)
library(ggplot2)
library(plotly)
install.packages("plotly")
library(plotly)
library(caTools)
install.packages("randomForest")
library(randomForest)
library(rpart)
